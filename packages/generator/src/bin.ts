import { generatorHandler } from "@prisma/generator-helper";
import fs from "node:fs/promises";
import path from "node:path";

const header = `// This file was generated by prisma-enums, do not edit manually.\n\n`;

generatorHandler({
  onManifest() {
    return {
      defaultOutput: "./enums",
      prettyName: "Prisma Enums",
    };
  },
  async onGenerate(options) {
    const enums = options.dmmf.datamodel.enums;

    const output = enums.map((e) => {
      let enumString = `export const ${e.name} = {\n`;
      e.values.forEach(({ name: value }) => {
        enumString += `  ${value}: "${value}",\n`;
      });
      enumString += `} as const;\n`;
      enumString += `export type ${e.name} = (typeof ${e.name})[keyof typeof ${e.name}];\n`;

      return enumString;
    });

    const outputDir = options.generator.output?.value ?? "./enums";
    const outputFile = options.generator.config.file ?? "index.ts";

    const outputPath = path.resolve(outputDir, outputFile);
    await fs.mkdir(path.dirname(outputPath), { recursive: true });
    await fs.writeFile(outputPath, header + output.join("\n"), "utf-8");
  },
});
